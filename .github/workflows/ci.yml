name: "CI"

on:
  push:
    paths-ignore: "./ci-basics.yml"
  workflow_dispatch: ~

jobs:
  deps:
    name: "Install depedencies"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.31.1
        with:
          php-version: 8.1
          tools: composer
      - name: "Cache vendor"
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
      - name: "Install composer deps"
        env:
          MAILER_SENDER_EMAIL_ENV: ${{ vars.MAILER_SENDER_EMAIL }}
        run: |
          export APP_ENV=test
          composer install --prefer-dist --no-interaction --no-progress
          echo MAILER_SENDER_EMAIL ${{ vars.MAILER_SENDER_EMAIL }}
          echo SYMFONY_ENV ${{ vars.SYMFONY_ENV }}
          echo "MAILER_API_KEY: ${{ secrets.MAILER_API_KEY }}"
          echo "TEST_SECRET: ${{ secrets.TEST_SECRET }}"
          echo "${{ vars.SYMFONY_ENV }}" >> .env.test.local
          echo "${{ secrets.MAILER_API_KEY }}" >> .env.test.local
          env | grep MAILER_SENDER_EMAIL_ENV
          cat .env.test.local

  linter:
    needs: ["deps"]
    name: "Lint code"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - name: "Restore vendor"
        uses: actions/cache/restore@v4
        with:
          key: composer-${{ hashFiles('**/composer.lock') }}
          path: vendor
      - name: "Generate cs config"
        run: cp phpcs.xml.dist phpcs.xml
      - name: PHP Code Sniffer
        uses: php-actions/phpcs@v1
        with:
          php_version: 8.1
          path: src/
          standard: phpcs.xml
      - name: "PHPStan"
        uses: php-actions/phpstan@v3
        continue-on-error: true
        with:
          path: src/
          php_version: 8.1
          level: 9

  unit_tests:
    needs: ["linter"]
    name: "Unit tests"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      - name: "Restore vendor"
        uses: actions/cache/restore@v4
        with:
          key: composer-${{ hashFiles('**/composer.lock') }}
          path: vendor
      - name: "Unit tests"
        run: |
          php bin/phpunit tests/_1_Unit

  functional_tests:
    needs: ["linter"]
    name: "Install depedencies"
    runs-on: "ubuntu-latest"
    services:
      database:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app
          MYSQL_ROOT_HOST: "%"
        ports:
          - 3306:3306
    continue-on-error: true
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      - name: "Restore vendor"
        uses: actions/cache/restore@v4
        with:
          key: composer-${{ hashFiles('**/composer.lock') }}
          path: vendor
      - name: "Check database healthy"
        run: nc -zv localhost 3306
      - name: "Run migrations"
        run: |
          php bin/console d:m:m
        env:
          DATABASE_HOST: 127.0.0.1
          DATABASE_NAME: app
          DATABASE_PASSWORD: password
      - name: "Start server"
        run: |
          php -S 127.0.0.1:8080 -t public &
          sleep 2
          nc -zv localhost 8080
      - name: "Functional tests"
        run: |
          php bin/phpunit tests/_3_Application

  notify:
    needs: ["unit_tests", "functional_tests"]
    name: "Notify"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Notify"
        run: echo "All tests passed"
